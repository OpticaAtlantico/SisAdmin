'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSNewListadoPrecios"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSNewListadoPrecios
    Inherits Global.System.Data.DataSet
    
    Private tableVNewProducto As VNewProductoDataTable

    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Sub New()
        MyBase.New()
        Me.BeginInit()
        Me.InitClass()
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, False)
        If (Me.IsBinarySerialized(info, context) = True) Then
            Me.InitVars(False)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)), String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("VNewProducto")) Is Nothing) Then
                MyBase.Tables.Add(New VNewProductoDataTable(ds.Tables("VNewProducto")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.Browsable(False), _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)> _
    Public ReadOnly Property VNewProducto() As VNewProductoDataTable
        Get
            Return Me.tableVNewProducto
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.BrowsableAttribute(True), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)> _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set(value As Global.System.Data.SchemaSerializationMode)
            Me._schemaSerializationMode = value
        End Set
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)> _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit()
        Me.InitClass()
        Me.EndInit()
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSNewListadoPrecios = CType(MyBase.Clone, DSNewListadoPrecios)
        cln.InitVars()
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset()
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("VNewProducto")) Is Nothing) Then
                MyBase.Tables.Add(New VNewProductoDataTable(ds.Tables("VNewProducto")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, False, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars()
        Else
            Me.ReadXml(reader)
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars()
        Me.InitVars(True)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableVNewProducto = CType(MyBase.Tables("VNewProducto"), VNewProductoDataTable)
        If (initTable = True) Then
            If (Not (Me.tableVNewProducto) Is Nothing) Then
                Me.tableVNewProducto.InitVars()
            End If
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub InitClass()
        Me.DataSetName = "DSNewListadoPrecios"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSNewListadoPrecios.xsd"
        Me.EnforceConstraints = True
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableVNewProducto = New VNewProductoDataTable()
        MyBase.Tables.Add(Me.tableVNewProducto)
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Function ShouldSerializeVNewProducto() As Boolean
        Return False
    End Function

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars()
        End If
    End Sub

    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSNewListadoPrecios = New DSNewListadoPrecios()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0

                        Do While ((s1.Position <> s1.Length) _
                                    AndAlso (s1.ReadByte = s2.ReadByte))


                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If

                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close()
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close()
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function

    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Delegate Sub VNewProductoRowChangeEventHandler(ByVal sender As Object, ByVal e As VNewProductoRowChangeEvent)

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class VNewProductoDataTable
        Inherits Global.System.Data.TypedTableBase(Of VNewProductoRow)

        Private columnidProducto As Global.System.Data.DataColumn

        Private columnStock As Global.System.Data.DataColumn

        Private columnNombre As Global.System.Data.DataColumn

        Private columnNombreCorto As Global.System.Data.DataColumn

        Private columnFechaCreacion As Global.System.Data.DataColumn

        Private columnidTipoProducto As Global.System.Data.DataColumn

        Private columnTipoProducto As Global.System.Data.DataColumn

        Private columnidCategoria As Global.System.Data.DataColumn

        Private columnCategoria As Global.System.Data.DataColumn

        Private columnidSubCategoria As Global.System.Data.DataColumn

        Private columnSubCategoria As Global.System.Data.DataColumn

        Private columnidUnidad As Global.System.Data.DataColumn

        Private columnUnidad As Global.System.Data.DataColumn

        Private columnidUnidadAlt As Global.System.Data.DataColumn

        Private columnUnidadAlt As Global.System.Data.DataColumn

        Private columnidMarca As Global.System.Data.DataColumn

        Private columnMarca As Global.System.Data.DataColumn

        Private columnModelo As Global.System.Data.DataColumn

        Private columnGarantia As Global.System.Data.DataColumn

        Private columnidProdNacional As Global.System.Data.DataColumn

        Private columnProdNacional As Global.System.Data.DataColumn

        Private columnFactorAlt As Global.System.Data.DataColumn

        Private columnTipoFactorAlt As Global.System.Data.DataColumn

        Private columnDecimal As Global.System.Data.DataColumn

        Private columnDescripcion As Global.System.Data.DataColumn

        Private columnActivo As Global.System.Data.DataColumn

        Private columnVenta As Global.System.Data.DataColumn

        Private columnImagen As Global.System.Data.DataColumn

        Private columnCosto As Global.System.Data.DataColumn

        Private columnCostoD As Global.System.Data.DataColumn

        Private columnCosto2 As Global.System.Data.DataColumn

        Private columnCosto2D As Global.System.Data.DataColumn

        Private columnExistenciaMin As Global.System.Data.DataColumn

        Private columnExistenciaMax As Global.System.Data.DataColumn

        Private columnPrecio1 As Global.System.Data.DataColumn

        Private columnPrecio2 As Global.System.Data.DataColumn

        Private columnPrecio3 As Global.System.Data.DataColumn

        Private columnPrecio4 As Global.System.Data.DataColumn

        Private columnPrecioEfectivo As Global.System.Data.DataColumn

        Private columnPrecioD1 As Global.System.Data.DataColumn

        Private columnPrecioD2 As Global.System.Data.DataColumn

        Private columnPrecioD3 As Global.System.Data.DataColumn

        Private columnPrecioD4 As Global.System.Data.DataColumn

        Private columnPrecioEfectivoD As Global.System.Data.DataColumn

        Private columnidIVAC As Global.System.Data.DataColumn

        Private columnNIVAC As Global.System.Data.DataColumn

        Private columnIVAC As Global.System.Data.DataColumn

        Private columnidIVAV As Global.System.Data.DataColumn

        Private columnNIVAV As Global.System.Data.DataColumn

        Private columnIVAV As Global.System.Data.DataColumn

        Private columnColorCat As Global.System.Data.DataColumn

        Private columnColorFondo As Global.System.Data.DataColumn

        Private columnColorFuente As Global.System.Data.DataColumn

        Private columnTFuente As Global.System.Data.DataColumn

        Private columnCapacidad As Global.System.Data.DataColumn

        Private columnidUnidadCapacidad As Global.System.Data.DataColumn

        Private columnUnidadCapacidad As Global.System.Data.DataColumn

        Private columnTipoReceta As Global.System.Data.DataColumn

        Private columnEmpaquetado As Global.System.Data.DataColumn

        Private columnidProdEmpaquetado As Global.System.Data.DataColumn

        Private columnProdEmpaquetado As Global.System.Data.DataColumn

        Private columnCantEmpaquetado As Global.System.Data.DataColumn

        Private columnImagenF As Global.System.Data.DataColumn

        Private columnP1 As Global.System.Data.DataColumn

        Private columnObservaciones As Global.System.Data.DataColumn

        Private columnPrecioEmp As Global.System.Data.DataColumn

        Private columnPrecioDEmp As Global.System.Data.DataColumn

        Private columnPrecioRemate As Global.System.Data.DataColumn

        Private columnPrecioRemateD As Global.System.Data.DataColumn

        Private columnRemate As Global.System.Data.DataColumn

        Private columnPrecioDM As Global.System.Data.DataColumn

        Private columnPrecioM As Global.System.Data.DataColumn

        Private columnCategoriaInt As Global.System.Data.DataColumn

        Private columnidUnidadCatInt As Global.System.Data.DataColumn

        Private columnUnidadCatInt As Global.System.Data.DataColumn

        Private columnidCategoriaInt As Global.System.Data.DataColumn

        Private columnCalculoCap As Global.System.Data.DataColumn

        Private columnMezcla As Global.System.Data.DataColumn

        Private columnCantMinMayor As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "VNewProducto"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidProducto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property StockColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnStock
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombre
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NombreCortoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreCorto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FechaCreacionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFechaCreacion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idTipoProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidTipoProducto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoProducto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idCategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidCategoria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idSubCategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidSubCategoria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property SubCategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSubCategoria
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idUnidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidUnidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idUnidadAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidUnidadAlt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadAlt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idMarcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidMarca
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MarcaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMarca
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ModeloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnModelo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property GarantiaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGarantia
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idProdNacionalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidProdNacional
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProdNacionalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdNacional
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FactorAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFactorAlt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoFactorAltColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoFactorAlt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DecimalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDecimal
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ActivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnActivo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property VentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVenta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImagenColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagen
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCosto
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CostoDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCostoD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Costo2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCosto2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Costo2DColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCosto2D
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExistenciaMinColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExistenciaMin
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ExistenciaMaxColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnExistenciaMax
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Precio4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecio4
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioEfectivoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioEfectivo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioD1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioD1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioD2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioD2
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioD3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioD3
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioD4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioD4
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioEfectivoDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioEfectivoD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idIVACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidIVAC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NIVACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVAC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IVACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAC
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idIVAVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidIVAV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NIVAVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVAV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property IVAVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAV
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColorCatColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColorCat
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColorFondoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColorFondo
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ColorFuenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnColorFuente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TFuenteColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTFuente
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CapacidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCapacidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idUnidadCapacidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidUnidadCapacidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadCapacidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadCapacidad
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TipoRecetaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoReceta
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property EmpaquetadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmpaquetado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idProdEmpaquetadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidProdEmpaquetado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ProdEmpaquetadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnProdEmpaquetado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantEmpaquetadoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantEmpaquetado
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ImagenFColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnImagenF
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property P1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property ObservacionesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnObservaciones
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioEmp
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioDEmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioDEmp
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioRemateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioRemate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioRemateDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioRemateD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property RemateColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRemate
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioDMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioDM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property PrecioMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPrecioM
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CategoriaIntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoriaInt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idUnidadCatIntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidUnidadCatInt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property UnidadCatIntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUnidadCatInt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property idCategoriaIntColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnidCategoriaInt
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CalculoCapColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCalculoCap
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MezclaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMezcla
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CantMinMayorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantMinMayor
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As VNewProductoRow
            Get
                Return CType(Me.Rows(index), VNewProductoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VNewProductoRowChanging As VNewProductoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VNewProductoRowChanged As VNewProductoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VNewProductoRowDeleting As VNewProductoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event VNewProductoRowDeleted As VNewProductoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddVNewProductoRow(ByVal row As VNewProductoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddVNewProductoRow( _
                    ByVal idProducto As String, _
                    ByVal Stock As Decimal, _
                    ByVal Nombre As String, _
                    ByVal NombreCorto As String, _
                    ByVal FechaCreacion As Date, _
                    ByVal idTipoProducto As Integer, _
                    ByVal TipoProducto As String, _
                    ByVal idCategoria As Integer, _
                    ByVal Categoria As String, _
                    ByVal idSubCategoria As Integer, _
                    ByVal SubCategoria As String, _
                    ByVal idUnidad As Integer, _
                    ByVal Unidad As String, _
                    ByVal idUnidadAlt As Integer, _
                    ByVal UnidadAlt As String, _
                    ByVal idMarca As Integer, _
                    ByVal Marca As String, _
                    ByVal Modelo As String, _
                    ByVal Garantia As String, _
                    ByVal idProdNacional As Integer, _
                    ByVal ProdNacional As String, _
                    ByVal FactorAlt As Decimal, _
                    ByVal TipoFactorAlt As String, _
                    ByVal _Decimal As Boolean, _
                    ByVal Descripcion As String, _
                    ByVal Activo As Boolean, _
                    ByVal Venta As Boolean, _
                    ByVal Imagen As String, _
                    ByVal Costo As Decimal, _
                    ByVal CostoD As Decimal, _
                    ByVal Costo2 As Decimal, _
                    ByVal Costo2D As Decimal, _
                    ByVal ExistenciaMin As Integer, _
                    ByVal ExistenciaMax As Integer, _
                    ByVal Precio1 As Decimal, _
                    ByVal Precio2 As Decimal, _
                    ByVal Precio3 As Decimal, _
                    ByVal Precio4 As Decimal, _
                    ByVal PrecioEfectivo As Decimal, _
                    ByVal PrecioD1 As Decimal, _
                    ByVal PrecioD2 As Decimal, _
                    ByVal PrecioD3 As Decimal, _
                    ByVal PrecioD4 As Decimal, _
                    ByVal PrecioEfectivoD As Decimal, _
                    ByVal idIVAC As Integer, _
                    ByVal NIVAC As String, _
                    ByVal IVAC As Integer, _
                    ByVal idIVAV As Integer, _
                    ByVal NIVAV As String, _
                    ByVal IVAV As Integer, _
                    ByVal ColorCat As Integer, _
                    ByVal ColorFondo As Integer, _
                    ByVal ColorFuente As Integer, _
                    ByVal TFuente As String, _
                    ByVal Capacidad As Decimal, _
                    ByVal idUnidadCapacidad As Integer, _
                    ByVal UnidadCapacidad As String, _
                    ByVal TipoReceta As String, _
                    ByVal Empaquetado As Boolean, _
                    ByVal idProdEmpaquetado As String, _
                    ByVal ProdEmpaquetado As String, _
                    ByVal CantEmpaquetado As Decimal, _
                    ByVal ImagenF() As Byte, _
                    ByVal P1 As Boolean, _
                    ByVal Observaciones As String, _
                    ByVal PrecioEmp As Decimal, _
                    ByVal PrecioDEmp As Decimal, _
                    ByVal PrecioRemate As Decimal, _
                    ByVal PrecioRemateD As Decimal, _
                    ByVal Remate As Boolean, _
                    ByVal PrecioDM As Decimal, _
                    ByVal PrecioM As Decimal, _
                    ByVal CategoriaInt As String, _
                    ByVal idUnidadCatInt As Integer, _
                    ByVal UnidadCatInt As String, _
                    ByVal idCategoriaInt As Integer, _
                    ByVal CalculoCap As Boolean, _
                    ByVal Mezcla As Boolean, _
                    ByVal CantMinMayor As Integer) As VNewProductoRow
            Dim rowVNewProductoRow As VNewProductoRow = CType(Me.NewRow, VNewProductoRow)
            Dim columnValuesArray() As Object = New Object() {idProducto, Stock, Nombre, NombreCorto, FechaCreacion, idTipoProducto, TipoProducto, idCategoria, Categoria, idSubCategoria, SubCategoria, idUnidad, Unidad, idUnidadAlt, UnidadAlt, idMarca, Marca, Modelo, Garantia, idProdNacional, ProdNacional, FactorAlt, TipoFactorAlt, _Decimal, Descripcion, Activo, Venta, Imagen, Costo, CostoD, Costo2, Costo2D, ExistenciaMin, ExistenciaMax, Precio1, Precio2, Precio3, Precio4, PrecioEfectivo, PrecioD1, PrecioD2, PrecioD3, PrecioD4, PrecioEfectivoD, idIVAC, NIVAC, IVAC, idIVAV, NIVAV, IVAV, ColorCat, ColorFondo, ColorFuente, TFuente, Capacidad, idUnidadCapacidad, UnidadCapacidad, TipoReceta, Empaquetado, idProdEmpaquetado, ProdEmpaquetado, CantEmpaquetado, ImagenF, P1, Observaciones, PrecioEmp, PrecioDEmp, PrecioRemate, PrecioRemateD, Remate, PrecioDM, PrecioM, CategoriaInt, idUnidadCatInt, UnidadCatInt, idCategoriaInt, CalculoCap, Mezcla, CantMinMayor}
            rowVNewProductoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVNewProductoRow)
            Return rowVNewProductoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VNewProductoDataTable = CType(MyBase.Clone, VNewProductoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VNewProductoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnidProducto = MyBase.Columns("idProducto")
            Me.columnStock = MyBase.Columns("Stock")
            Me.columnNombre = MyBase.Columns("Nombre")
            Me.columnNombreCorto = MyBase.Columns("NombreCorto")
            Me.columnFechaCreacion = MyBase.Columns("FechaCreacion")
            Me.columnidTipoProducto = MyBase.Columns("idTipoProducto")
            Me.columnTipoProducto = MyBase.Columns("TipoProducto")
            Me.columnidCategoria = MyBase.Columns("idCategoria")
            Me.columnCategoria = MyBase.Columns("Categoria")
            Me.columnidSubCategoria = MyBase.Columns("idSubCategoria")
            Me.columnSubCategoria = MyBase.Columns("SubCategoria")
            Me.columnidUnidad = MyBase.Columns("idUnidad")
            Me.columnUnidad = MyBase.Columns("Unidad")
            Me.columnidUnidadAlt = MyBase.Columns("idUnidadAlt")
            Me.columnUnidadAlt = MyBase.Columns("UnidadAlt")
            Me.columnidMarca = MyBase.Columns("idMarca")
            Me.columnMarca = MyBase.Columns("Marca")
            Me.columnModelo = MyBase.Columns("Modelo")
            Me.columnGarantia = MyBase.Columns("Garantia")
            Me.columnidProdNacional = MyBase.Columns("idProdNacional")
            Me.columnProdNacional = MyBase.Columns("ProdNacional")
            Me.columnFactorAlt = MyBase.Columns("FactorAlt")
            Me.columnTipoFactorAlt = MyBase.Columns("TipoFactorAlt")
            Me.columnDecimal = MyBase.Columns("Decimal")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnActivo = MyBase.Columns("Activo")
            Me.columnVenta = MyBase.Columns("Venta")
            Me.columnImagen = MyBase.Columns("Imagen")
            Me.columnCosto = MyBase.Columns("Costo")
            Me.columnCostoD = MyBase.Columns("CostoD")
            Me.columnCosto2 = MyBase.Columns("Costo2")
            Me.columnCosto2D = MyBase.Columns("Costo2D")
            Me.columnExistenciaMin = MyBase.Columns("ExistenciaMin")
            Me.columnExistenciaMax = MyBase.Columns("ExistenciaMax")
            Me.columnPrecio1 = MyBase.Columns("Precio1")
            Me.columnPrecio2 = MyBase.Columns("Precio2")
            Me.columnPrecio3 = MyBase.Columns("Precio3")
            Me.columnPrecio4 = MyBase.Columns("Precio4")
            Me.columnPrecioEfectivo = MyBase.Columns("PrecioEfectivo")
            Me.columnPrecioD1 = MyBase.Columns("PrecioD1")
            Me.columnPrecioD2 = MyBase.Columns("PrecioD2")
            Me.columnPrecioD3 = MyBase.Columns("PrecioD3")
            Me.columnPrecioD4 = MyBase.Columns("PrecioD4")
            Me.columnPrecioEfectivoD = MyBase.Columns("PrecioEfectivoD")
            Me.columnidIVAC = MyBase.Columns("idIVAC")
            Me.columnNIVAC = MyBase.Columns("NIVAC")
            Me.columnIVAC = MyBase.Columns("IVAC")
            Me.columnidIVAV = MyBase.Columns("idIVAV")
            Me.columnNIVAV = MyBase.Columns("NIVAV")
            Me.columnIVAV = MyBase.Columns("IVAV")
            Me.columnColorCat = MyBase.Columns("ColorCat")
            Me.columnColorFondo = MyBase.Columns("ColorFondo")
            Me.columnColorFuente = MyBase.Columns("ColorFuente")
            Me.columnTFuente = MyBase.Columns("TFuente")
            Me.columnCapacidad = MyBase.Columns("Capacidad")
            Me.columnidUnidadCapacidad = MyBase.Columns("idUnidadCapacidad")
            Me.columnUnidadCapacidad = MyBase.Columns("UnidadCapacidad")
            Me.columnTipoReceta = MyBase.Columns("TipoReceta")
            Me.columnEmpaquetado = MyBase.Columns("Empaquetado")
            Me.columnidProdEmpaquetado = MyBase.Columns("idProdEmpaquetado")
            Me.columnProdEmpaquetado = MyBase.Columns("ProdEmpaquetado")
            Me.columnCantEmpaquetado = MyBase.Columns("CantEmpaquetado")
            Me.columnImagenF = MyBase.Columns("ImagenF")
            Me.columnP1 = MyBase.Columns("P1")
            Me.columnObservaciones = MyBase.Columns("Observaciones")
            Me.columnPrecioEmp = MyBase.Columns("PrecioEmp")
            Me.columnPrecioDEmp = MyBase.Columns("PrecioDEmp")
            Me.columnPrecioRemate = MyBase.Columns("PrecioRemate")
            Me.columnPrecioRemateD = MyBase.Columns("PrecioRemateD")
            Me.columnRemate = MyBase.Columns("Remate")
            Me.columnPrecioDM = MyBase.Columns("PrecioDM")
            Me.columnPrecioM = MyBase.Columns("PrecioM")
            Me.columnCategoriaInt = MyBase.Columns("CategoriaInt")
            Me.columnidUnidadCatInt = MyBase.Columns("idUnidadCatInt")
            Me.columnUnidadCatInt = MyBase.Columns("UnidadCatInt")
            Me.columnidCategoriaInt = MyBase.Columns("idCategoriaInt")
            Me.columnCalculoCap = MyBase.Columns("CalculoCap")
            Me.columnMezcla = MyBase.Columns("Mezcla")
            Me.columnCantMinMayor = MyBase.Columns("CantMinMayor")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnidProducto = New Global.System.Data.DataColumn("idProducto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidProducto)
            Me.columnStock = New Global.System.Data.DataColumn("Stock", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnStock)
            Me.columnNombre = New Global.System.Data.DataColumn("Nombre", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombre)
            Me.columnNombreCorto = New Global.System.Data.DataColumn("NombreCorto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreCorto)
            Me.columnFechaCreacion = New Global.System.Data.DataColumn("FechaCreacion", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFechaCreacion)
            Me.columnidTipoProducto = New Global.System.Data.DataColumn("idTipoProducto", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidTipoProducto)
            Me.columnTipoProducto = New Global.System.Data.DataColumn("TipoProducto", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoProducto)
            Me.columnidCategoria = New Global.System.Data.DataColumn("idCategoria", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidCategoria)
            Me.columnCategoria = New Global.System.Data.DataColumn("Categoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoria)
            Me.columnidSubCategoria = New Global.System.Data.DataColumn("idSubCategoria", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidSubCategoria)
            Me.columnSubCategoria = New Global.System.Data.DataColumn("SubCategoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSubCategoria)
            Me.columnidUnidad = New Global.System.Data.DataColumn("idUnidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidUnidad)
            Me.columnUnidad = New Global.System.Data.DataColumn("Unidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidad)
            Me.columnidUnidadAlt = New Global.System.Data.DataColumn("idUnidadAlt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidUnidadAlt)
            Me.columnUnidadAlt = New Global.System.Data.DataColumn("UnidadAlt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadAlt)
            Me.columnidMarca = New Global.System.Data.DataColumn("idMarca", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidMarca)
            Me.columnMarca = New Global.System.Data.DataColumn("Marca", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMarca)
            Me.columnModelo = New Global.System.Data.DataColumn("Modelo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnModelo)
            Me.columnGarantia = New Global.System.Data.DataColumn("Garantia", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGarantia)
            Me.columnidProdNacional = New Global.System.Data.DataColumn("idProdNacional", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidProdNacional)
            Me.columnProdNacional = New Global.System.Data.DataColumn("ProdNacional", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdNacional)
            Me.columnFactorAlt = New Global.System.Data.DataColumn("FactorAlt", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFactorAlt)
            Me.columnTipoFactorAlt = New Global.System.Data.DataColumn("TipoFactorAlt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoFactorAlt)
            Me.columnDecimal = New Global.System.Data.DataColumn("Decimal", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            Me.columnDecimal.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "DecimalColumn")
            Me.columnDecimal.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDecimal")
            Me.columnDecimal.ExtendedProperties.Add("Generator_UserColumnName", "Decimal")
            MyBase.Columns.Add(Me.columnDecimal)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnActivo = New Global.System.Data.DataColumn("Activo", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnActivo)
            Me.columnVenta = New Global.System.Data.DataColumn("Venta", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVenta)
            Me.columnImagen = New Global.System.Data.DataColumn("Imagen", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagen)
            Me.columnCosto = New Global.System.Data.DataColumn("Costo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto)
            Me.columnCostoD = New Global.System.Data.DataColumn("CostoD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCostoD)
            Me.columnCosto2 = New Global.System.Data.DataColumn("Costo2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto2)
            Me.columnCosto2D = New Global.System.Data.DataColumn("Costo2D", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCosto2D)
            Me.columnExistenciaMin = New Global.System.Data.DataColumn("ExistenciaMin", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExistenciaMin)
            Me.columnExistenciaMax = New Global.System.Data.DataColumn("ExistenciaMax", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExistenciaMax)
            Me.columnPrecio1 = New Global.System.Data.DataColumn("Precio1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio1)
            Me.columnPrecio2 = New Global.System.Data.DataColumn("Precio2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio2)
            Me.columnPrecio3 = New Global.System.Data.DataColumn("Precio3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio3)
            Me.columnPrecio4 = New Global.System.Data.DataColumn("Precio4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecio4)
            Me.columnPrecioEfectivo = New Global.System.Data.DataColumn("PrecioEfectivo", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioEfectivo)
            Me.columnPrecioD1 = New Global.System.Data.DataColumn("PrecioD1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioD1)
            Me.columnPrecioD2 = New Global.System.Data.DataColumn("PrecioD2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioD2)
            Me.columnPrecioD3 = New Global.System.Data.DataColumn("PrecioD3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioD3)
            Me.columnPrecioD4 = New Global.System.Data.DataColumn("PrecioD4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioD4)
            Me.columnPrecioEfectivoD = New Global.System.Data.DataColumn("PrecioEfectivoD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioEfectivoD)
            Me.columnidIVAC = New Global.System.Data.DataColumn("idIVAC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidIVAC)
            Me.columnNIVAC = New Global.System.Data.DataColumn("NIVAC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVAC)
            Me.columnIVAC = New Global.System.Data.DataColumn("IVAC", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAC)
            Me.columnidIVAV = New Global.System.Data.DataColumn("idIVAV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidIVAV)
            Me.columnNIVAV = New Global.System.Data.DataColumn("NIVAV", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVAV)
            Me.columnIVAV = New Global.System.Data.DataColumn("IVAV", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAV)
            Me.columnColorCat = New Global.System.Data.DataColumn("ColorCat", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColorCat)
            Me.columnColorFondo = New Global.System.Data.DataColumn("ColorFondo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColorFondo)
            Me.columnColorFuente = New Global.System.Data.DataColumn("ColorFuente", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnColorFuente)
            Me.columnTFuente = New Global.System.Data.DataColumn("TFuente", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTFuente)
            Me.columnCapacidad = New Global.System.Data.DataColumn("Capacidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCapacidad)
            Me.columnidUnidadCapacidad = New Global.System.Data.DataColumn("idUnidadCapacidad", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidUnidadCapacidad)
            Me.columnUnidadCapacidad = New Global.System.Data.DataColumn("UnidadCapacidad", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadCapacidad)
            Me.columnTipoReceta = New Global.System.Data.DataColumn("TipoReceta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoReceta)
            Me.columnEmpaquetado = New Global.System.Data.DataColumn("Empaquetado", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmpaquetado)
            Me.columnidProdEmpaquetado = New Global.System.Data.DataColumn("idProdEmpaquetado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidProdEmpaquetado)
            Me.columnProdEmpaquetado = New Global.System.Data.DataColumn("ProdEmpaquetado", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnProdEmpaquetado)
            Me.columnCantEmpaquetado = New Global.System.Data.DataColumn("CantEmpaquetado", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantEmpaquetado)
            Me.columnImagenF = New Global.System.Data.DataColumn("ImagenF", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnImagenF)
            Me.columnP1 = New Global.System.Data.DataColumn("P1", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1)
            Me.columnObservaciones = New Global.System.Data.DataColumn("Observaciones", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnObservaciones)
            Me.columnPrecioEmp = New Global.System.Data.DataColumn("PrecioEmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioEmp)
            Me.columnPrecioDEmp = New Global.System.Data.DataColumn("PrecioDEmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioDEmp)
            Me.columnPrecioRemate = New Global.System.Data.DataColumn("PrecioRemate", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioRemate)
            Me.columnPrecioRemateD = New Global.System.Data.DataColumn("PrecioRemateD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioRemateD)
            Me.columnRemate = New Global.System.Data.DataColumn("Remate", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRemate)
            Me.columnPrecioDM = New Global.System.Data.DataColumn("PrecioDM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioDM)
            Me.columnPrecioM = New Global.System.Data.DataColumn("PrecioM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPrecioM)
            Me.columnCategoriaInt = New Global.System.Data.DataColumn("CategoriaInt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoriaInt)
            Me.columnidUnidadCatInt = New Global.System.Data.DataColumn("idUnidadCatInt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidUnidadCatInt)
            Me.columnUnidadCatInt = New Global.System.Data.DataColumn("UnidadCatInt", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUnidadCatInt)
            Me.columnidCategoriaInt = New Global.System.Data.DataColumn("idCategoriaInt", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnidCategoriaInt)
            Me.columnCalculoCap = New Global.System.Data.DataColumn("CalculoCap", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCalculoCap)
            Me.columnMezcla = New Global.System.Data.DataColumn("Mezcla", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMezcla)
            Me.columnCantMinMayor = New Global.System.Data.DataColumn("CantMinMayor", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantMinMayor)
            Me.columnidProducto.AllowDBNull = False
            Me.columnidProducto.MaxLength = 20
            Me.columnNombre.MaxLength = 100
            Me.columnNombreCorto.MaxLength = 50
            Me.columnTipoProducto.MaxLength = 20
            Me.columnCategoria.MaxLength = 50
            Me.columnSubCategoria.MaxLength = 50
            Me.columnUnidad.MaxLength = 50
            Me.columnUnidadAlt.MaxLength = 50
            Me.columnMarca.MaxLength = 50
            Me.columnModelo.MaxLength = 10
            Me.columnGarantia.MaxLength = 10
            Me.columnProdNacional.MaxLength = 50
            Me.columnTipoFactorAlt.MaxLength = 50
            Me.columnDescripcion.MaxLength = 2147483647
            Me.columnImagen.MaxLength = 50
            Me.columnNIVAC.MaxLength = 8
            Me.columnNIVAV.MaxLength = 8
            Me.columnTFuente.MaxLength = 50
            Me.columnUnidadCapacidad.MaxLength = 50
            Me.columnTipoReceta.MaxLength = 10
            Me.columnidProdEmpaquetado.MaxLength = 20
            Me.columnProdEmpaquetado.MaxLength = 100
            Me.columnObservaciones.MaxLength = 2147483647
            Me.columnCategoriaInt.MaxLength = 50
            Me.columnUnidadCatInt.MaxLength = 50
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewVNewProductoRow() As VNewProductoRow
            Return CType(Me.NewRow, VNewProductoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VNewProductoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VNewProductoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VNewProductoRowChangedEvent) Is Nothing) Then
                RaiseEvent VNewProductoRowChanged(Me, New VNewProductoRowChangeEvent(CType(e.Row, VNewProductoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VNewProductoRowChangingEvent) Is Nothing) Then
                RaiseEvent VNewProductoRowChanging(Me, New VNewProductoRowChangeEvent(CType(e.Row, VNewProductoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VNewProductoRowDeletedEvent) Is Nothing) Then
                RaiseEvent VNewProductoRowDeleted(Me, New VNewProductoRowChangeEvent(CType(e.Row, VNewProductoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VNewProductoRowDeletingEvent) Is Nothing) Then
                RaiseEvent VNewProductoRowDeleting(Me, New VNewProductoRowChangeEvent(CType(e.Row, VNewProductoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveVNewProductoRow(ByVal row As VNewProductoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSNewListadoPrecios = New DSNewListadoPrecios()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VNewProductoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VNewProductoRow
        Inherits Global.System.Data.DataRow

        Private tableVNewProducto As VNewProductoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVNewProducto = CType(Me.Table, VNewProductoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idProducto() As String
            Get
                Return CType(Me(Me.tableVNewProducto.idProductoColumn), String)
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.idProductoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Stock() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.StockColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Stock' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.StockColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Nombre() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.NombreColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Nombre' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.NombreColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NombreCorto() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.NombreCortoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreCorto' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.NombreCortoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FechaCreacion() As Date
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.FechaCreacionColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FechaCreacion' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableVNewProducto.FechaCreacionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idTipoProducto() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idTipoProductoColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idTipoProducto' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idTipoProductoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoProducto() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.TipoProductoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoProducto' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.TipoProductoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idCategoria() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idCategoriaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idCategoria' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idCategoriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Categoria() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CategoriaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Categoria' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.CategoriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idSubCategoria() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idSubCategoriaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idSubCategoria' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idSubCategoriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property SubCategoria() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.SubCategoriaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SubCategoria' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.SubCategoriaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idUnidad() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idUnidadColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idUnidad' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idUnidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Unidad() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.UnidadColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Unidad' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.UnidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idUnidadAlt() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idUnidadAltColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idUnidadAlt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idUnidadAltColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadAlt() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.UnidadAltColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UnidadAlt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.UnidadAltColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idMarca() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idMarcaColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idMarca' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idMarcaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Marca() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.MarcaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Marca' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.MarcaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Modelo() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ModeloColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Modelo' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.ModeloColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Garantia() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.GarantiaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Garantia' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.GarantiaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idProdNacional() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idProdNacionalColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idProdNacional' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idProdNacionalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProdNacional() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ProdNacionalColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ProdNacional' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.ProdNacionalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FactorAlt() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.FactorAltColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FactorAlt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.FactorAltColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoFactorAlt() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.TipoFactorAltColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoFactorAlt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.TipoFactorAltColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property _Decimal() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.DecimalColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Decimal' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.DecimalColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Descripcion() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.DescripcionColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Descripcion' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.DescripcionColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Activo() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ActivoColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Activo' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.ActivoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Venta() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.VentaColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Venta' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.VentaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Imagen() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ImagenColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Imagen' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.ImagenColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Costo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CostoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Costo' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.CostoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CostoD() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CostoDColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CostoD' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.CostoDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Costo2() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.Costo2Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Costo2' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.Costo2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Costo2D() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.Costo2DColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Costo2D' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.Costo2DColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExistenciaMin() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ExistenciaMinColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ExistenciaMin' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.ExistenciaMinColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ExistenciaMax() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ExistenciaMaxColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ExistenciaMax' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.ExistenciaMaxColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio1() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.Precio1Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio1' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.Precio1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio2() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.Precio2Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio2' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.Precio2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio3() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.Precio3Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio3' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.Precio3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Precio4() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.Precio4Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Precio4' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.Precio4Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioEfectivo() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioEfectivoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioEfectivo' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioEfectivoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioD1() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioD1Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioD1' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioD1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioD2() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioD2Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioD2' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioD2Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioD3() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioD3Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioD3' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioD3Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioD4() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioD4Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioD4' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioD4Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioEfectivoD() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioEfectivoDColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioEfectivoD' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioEfectivoDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idIVAC() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idIVACColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idIVAC' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idIVACColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NIVAC() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.NIVACColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVAC' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.NIVACColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IVAC() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.IVACColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IVAC' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.IVACColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idIVAV() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idIVAVColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idIVAV' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idIVAVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NIVAV() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.NIVAVColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NIVAV' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.NIVAVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property IVAV() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.IVAVColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IVAV' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.IVAVColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ColorCat() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ColorCatColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ColorCat' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.ColorCatColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ColorFondo() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ColorFondoColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ColorFondo' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.ColorFondoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ColorFuente() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ColorFuenteColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ColorFuente' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.ColorFuenteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TFuente() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.TFuenteColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TFuente' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.TFuenteColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Capacidad() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CapacidadColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Capacidad' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.CapacidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idUnidadCapacidad() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idUnidadCapacidadColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idUnidadCapacidad' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idUnidadCapacidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadCapacidad() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.UnidadCapacidadColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UnidadCapacidad' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.UnidadCapacidadColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TipoReceta() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.TipoRecetaColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TipoReceta' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.TipoRecetaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Empaquetado() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.EmpaquetadoColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Empaquetado' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.EmpaquetadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idProdEmpaquetado() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idProdEmpaquetadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idProdEmpaquetado' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.idProdEmpaquetadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ProdEmpaquetado() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ProdEmpaquetadoColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ProdEmpaquetado' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.ProdEmpaquetadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CantEmpaquetado() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CantEmpaquetadoColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantEmpaquetado' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.CantEmpaquetadoColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ImagenF() As Byte()
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ImagenFColumn), Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ImagenF' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Byte())
                Me(Me.tableVNewProducto.ImagenFColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property P1() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.P1Column), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.P1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Observaciones() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.ObservacionesColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Observaciones' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.ObservacionesColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioEmp() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioEmpColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioEmp' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioEmpColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioDEmp() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioDEmpColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioDEmp' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioDEmpColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioRemate() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioRemateColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioRemate' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioRemateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioRemateD() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioRemateDColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioRemateD' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioRemateDColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Remate() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.RemateColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Remate' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.RemateColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioDM() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioDMColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioDM' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioDMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PrecioM() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.PrecioMColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PrecioM' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableVNewProducto.PrecioMColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CategoriaInt() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CategoriaIntColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CategoriaInt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.CategoriaIntColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idUnidadCatInt() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idUnidadCatIntColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idUnidadCatInt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idUnidadCatIntColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UnidadCatInt() As String
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.UnidadCatIntColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'UnidadCatInt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableVNewProducto.UnidadCatIntColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property idCategoriaInt() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.idCategoriaIntColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'idCategoriaInt' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.idCategoriaIntColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CalculoCap() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CalculoCapColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CalculoCap' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.CalculoCapColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property Mezcla() As Boolean
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.MezclaColumn), Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Mezcla' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Boolean)
                Me(Me.tableVNewProducto.MezclaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CantMinMayor() As Integer
            Get
                Try
                    Return CType(Me(Me.tableVNewProducto.CantMinMayorColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CantMinMayor' de la tabla 'VNewProducto' es DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableVNewProducto.CantMinMayorColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsStockNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.StockColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetStockNull()
            Me(Me.tableVNewProducto.StockColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.NombreColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreNull()
            Me(Me.tableVNewProducto.NombreColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNombreCortoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.NombreCortoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNombreCortoNull()
            Me(Me.tableVNewProducto.NombreCortoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFechaCreacionNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.FechaCreacionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFechaCreacionNull()
            Me(Me.tableVNewProducto.FechaCreacionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidTipoProductoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idTipoProductoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidTipoProductoNull()
            Me(Me.tableVNewProducto.idTipoProductoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoProductoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.TipoProductoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoProductoNull()
            Me(Me.tableVNewProducto.TipoProductoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidCategoriaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idCategoriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidCategoriaNull()
            Me(Me.tableVNewProducto.idCategoriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCategoriaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CategoriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCategoriaNull()
            Me(Me.tableVNewProducto.CategoriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidSubCategoriaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idSubCategoriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidSubCategoriaNull()
            Me(Me.tableVNewProducto.idSubCategoriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsSubCategoriaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.SubCategoriaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetSubCategoriaNull()
            Me(Me.tableVNewProducto.SubCategoriaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidUnidadNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idUnidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidUnidadNull()
            Me(Me.tableVNewProducto.idUnidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnidadNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.UnidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnidadNull()
            Me(Me.tableVNewProducto.UnidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidUnidadAltNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idUnidadAltColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidUnidadAltNull()
            Me(Me.tableVNewProducto.idUnidadAltColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnidadAltNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.UnidadAltColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnidadAltNull()
            Me(Me.tableVNewProducto.UnidadAltColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidMarcaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idMarcaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidMarcaNull()
            Me(Me.tableVNewProducto.idMarcaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMarcaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.MarcaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMarcaNull()
            Me(Me.tableVNewProducto.MarcaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsModeloNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ModeloColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetModeloNull()
            Me(Me.tableVNewProducto.ModeloColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsGarantiaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.GarantiaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetGarantiaNull()
            Me(Me.tableVNewProducto.GarantiaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidProdNacionalNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idProdNacionalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidProdNacionalNull()
            Me(Me.tableVNewProducto.idProdNacionalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProdNacionalNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ProdNacionalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProdNacionalNull()
            Me(Me.tableVNewProducto.ProdNacionalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFactorAltNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.FactorAltColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFactorAltNull()
            Me(Me.tableVNewProducto.FactorAltColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoFactorAltNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.TipoFactorAltColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoFactorAltNull()
            Me(Me.tableVNewProducto.TipoFactorAltColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function Is_DecimalNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.DecimalColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub Set_DecimalNull()
            Me(Me.tableVNewProducto.DecimalColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.DescripcionColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDescripcionNull()
            Me(Me.tableVNewProducto.DescripcionColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsActivoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ActivoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetActivoNull()
            Me(Me.tableVNewProducto.ActivoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsVentaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.VentaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetVentaNull()
            Me(Me.tableVNewProducto.VentaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImagenNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ImagenColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImagenNull()
            Me(Me.tableVNewProducto.ImagenColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCostoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CostoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCostoNull()
            Me(Me.tableVNewProducto.CostoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCostoDNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CostoDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCostoDNull()
            Me(Me.tableVNewProducto.CostoDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCosto2Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.Costo2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCosto2Null()
            Me(Me.tableVNewProducto.Costo2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCosto2DNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.Costo2DColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCosto2DNull()
            Me(Me.tableVNewProducto.Costo2DColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExistenciaMinNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ExistenciaMinColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExistenciaMinNull()
            Me(Me.tableVNewProducto.ExistenciaMinColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsExistenciaMaxNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ExistenciaMaxColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetExistenciaMaxNull()
            Me(Me.tableVNewProducto.ExistenciaMaxColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecio1Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.Precio1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecio1Null()
            Me(Me.tableVNewProducto.Precio1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecio2Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.Precio2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecio2Null()
            Me(Me.tableVNewProducto.Precio2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecio3Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.Precio3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecio3Null()
            Me(Me.tableVNewProducto.Precio3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecio4Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.Precio4Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecio4Null()
            Me(Me.tableVNewProducto.Precio4Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioEfectivoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioEfectivoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioEfectivoNull()
            Me(Me.tableVNewProducto.PrecioEfectivoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioD1Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioD1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioD1Null()
            Me(Me.tableVNewProducto.PrecioD1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioD2Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioD2Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioD2Null()
            Me(Me.tableVNewProducto.PrecioD2Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioD3Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioD3Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioD3Null()
            Me(Me.tableVNewProducto.PrecioD3Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioD4Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioD4Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioD4Null()
            Me(Me.tableVNewProducto.PrecioD4Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioEfectivoDNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioEfectivoDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioEfectivoDNull()
            Me(Me.tableVNewProducto.PrecioEfectivoDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidIVACNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idIVACColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidIVACNull()
            Me(Me.tableVNewProducto.idIVACColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNIVACNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.NIVACColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNIVACNull()
            Me(Me.tableVNewProducto.NIVACColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIVACNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.IVACColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIVACNull()
            Me(Me.tableVNewProducto.IVACColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidIVAVNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idIVAVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidIVAVNull()
            Me(Me.tableVNewProducto.idIVAVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNIVAVNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.NIVAVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNIVAVNull()
            Me(Me.tableVNewProducto.NIVAVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsIVAVNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.IVAVColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetIVAVNull()
            Me(Me.tableVNewProducto.IVAVColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColorCatNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ColorCatColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColorCatNull()
            Me(Me.tableVNewProducto.ColorCatColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColorFondoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ColorFondoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColorFondoNull()
            Me(Me.tableVNewProducto.ColorFondoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsColorFuenteNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ColorFuenteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetColorFuenteNull()
            Me(Me.tableVNewProducto.ColorFuenteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTFuenteNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.TFuenteColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTFuenteNull()
            Me(Me.tableVNewProducto.TFuenteColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCapacidadNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CapacidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCapacidadNull()
            Me(Me.tableVNewProducto.CapacidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidUnidadCapacidadNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idUnidadCapacidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidUnidadCapacidadNull()
            Me(Me.tableVNewProducto.idUnidadCapacidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnidadCapacidadNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.UnidadCapacidadColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnidadCapacidadNull()
            Me(Me.tableVNewProducto.UnidadCapacidadColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTipoRecetaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.TipoRecetaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTipoRecetaNull()
            Me(Me.tableVNewProducto.TipoRecetaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsEmpaquetadoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.EmpaquetadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetEmpaquetadoNull()
            Me(Me.tableVNewProducto.EmpaquetadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidProdEmpaquetadoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idProdEmpaquetadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidProdEmpaquetadoNull()
            Me(Me.tableVNewProducto.idProdEmpaquetadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsProdEmpaquetadoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ProdEmpaquetadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetProdEmpaquetadoNull()
            Me(Me.tableVNewProducto.ProdEmpaquetadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCantEmpaquetadoNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CantEmpaquetadoColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCantEmpaquetadoNull()
            Me(Me.tableVNewProducto.CantEmpaquetadoColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsImagenFNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ImagenFColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetImagenFNull()
            Me(Me.tableVNewProducto.ImagenFColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsP1Null() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.P1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetP1Null()
            Me(Me.tableVNewProducto.P1Column) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsObservacionesNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.ObservacionesColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetObservacionesNull()
            Me(Me.tableVNewProducto.ObservacionesColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioEmpNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioEmpColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioEmpNull()
            Me(Me.tableVNewProducto.PrecioEmpColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioDEmpNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioDEmpColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioDEmpNull()
            Me(Me.tableVNewProducto.PrecioDEmpColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioRemateNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioRemateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioRemateNull()
            Me(Me.tableVNewProducto.PrecioRemateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioRemateDNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioRemateDColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioRemateDNull()
            Me(Me.tableVNewProducto.PrecioRemateDColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsRemateNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.RemateColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetRemateNull()
            Me(Me.tableVNewProducto.RemateColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioDMNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioDMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioDMNull()
            Me(Me.tableVNewProducto.PrecioDMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPrecioMNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.PrecioMColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPrecioMNull()
            Me(Me.tableVNewProducto.PrecioMColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCategoriaIntNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CategoriaIntColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCategoriaIntNull()
            Me(Me.tableVNewProducto.CategoriaIntColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidUnidadCatIntNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idUnidadCatIntColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidUnidadCatIntNull()
            Me(Me.tableVNewProducto.idUnidadCatIntColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsUnidadCatIntNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.UnidadCatIntColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetUnidadCatIntNull()
            Me(Me.tableVNewProducto.UnidadCatIntColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsidCategoriaIntNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.idCategoriaIntColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetidCategoriaIntNull()
            Me(Me.tableVNewProducto.idCategoriaIntColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCalculoCapNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CalculoCapColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCalculoCapNull()
            Me(Me.tableVNewProducto.CalculoCapColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMezclaNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.MezclaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMezclaNull()
            Me(Me.tableVNewProducto.MezclaColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCantMinMayorNull() As Boolean
            Return Me.IsNull(Me.tableVNewProducto.CantMinMayorColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCantMinMayorNull()
            Me(Me.tableVNewProducto.CantMinMayorColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class VNewProductoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As VNewProductoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As VNewProductoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As VNewProductoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSNewListadoPreciosTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class VNewProductoTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VNewProducto"
            tableMapping.ColumnMappings.Add("idProducto", "idProducto")
            tableMapping.ColumnMappings.Add("Stock", "Stock")
            tableMapping.ColumnMappings.Add("Nombre", "Nombre")
            tableMapping.ColumnMappings.Add("NombreCorto", "NombreCorto")
            tableMapping.ColumnMappings.Add("FechaCreacion", "FechaCreacion")
            tableMapping.ColumnMappings.Add("idTipoProducto", "idTipoProducto")
            tableMapping.ColumnMappings.Add("TipoProducto", "TipoProducto")
            tableMapping.ColumnMappings.Add("idCategoria", "idCategoria")
            tableMapping.ColumnMappings.Add("Categoria", "Categoria")
            tableMapping.ColumnMappings.Add("idSubCategoria", "idSubCategoria")
            tableMapping.ColumnMappings.Add("SubCategoria", "SubCategoria")
            tableMapping.ColumnMappings.Add("idUnidad", "idUnidad")
            tableMapping.ColumnMappings.Add("Unidad", "Unidad")
            tableMapping.ColumnMappings.Add("idUnidadAlt", "idUnidadAlt")
            tableMapping.ColumnMappings.Add("UnidadAlt", "UnidadAlt")
            tableMapping.ColumnMappings.Add("idMarca", "idMarca")
            tableMapping.ColumnMappings.Add("Marca", "Marca")
            tableMapping.ColumnMappings.Add("Modelo", "Modelo")
            tableMapping.ColumnMappings.Add("Garantia", "Garantia")
            tableMapping.ColumnMappings.Add("idProdNacional", "idProdNacional")
            tableMapping.ColumnMappings.Add("ProdNacional", "ProdNacional")
            tableMapping.ColumnMappings.Add("FactorAlt", "FactorAlt")
            tableMapping.ColumnMappings.Add("TipoFactorAlt", "TipoFactorAlt")
            tableMapping.ColumnMappings.Add("Decimal", "Decimal")
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion")
            tableMapping.ColumnMappings.Add("Activo", "Activo")
            tableMapping.ColumnMappings.Add("Venta", "Venta")
            tableMapping.ColumnMappings.Add("Imagen", "Imagen")
            tableMapping.ColumnMappings.Add("Costo", "Costo")
            tableMapping.ColumnMappings.Add("CostoD", "CostoD")
            tableMapping.ColumnMappings.Add("Costo2", "Costo2")
            tableMapping.ColumnMappings.Add("Costo2D", "Costo2D")
            tableMapping.ColumnMappings.Add("ExistenciaMin", "ExistenciaMin")
            tableMapping.ColumnMappings.Add("ExistenciaMax", "ExistenciaMax")
            tableMapping.ColumnMappings.Add("Precio1", "Precio1")
            tableMapping.ColumnMappings.Add("Precio2", "Precio2")
            tableMapping.ColumnMappings.Add("Precio3", "Precio3")
            tableMapping.ColumnMappings.Add("Precio4", "Precio4")
            tableMapping.ColumnMappings.Add("PrecioEfectivo", "PrecioEfectivo")
            tableMapping.ColumnMappings.Add("PrecioD1", "PrecioD1")
            tableMapping.ColumnMappings.Add("PrecioD2", "PrecioD2")
            tableMapping.ColumnMappings.Add("PrecioD3", "PrecioD3")
            tableMapping.ColumnMappings.Add("PrecioD4", "PrecioD4")
            tableMapping.ColumnMappings.Add("PrecioEfectivoD", "PrecioEfectivoD")
            tableMapping.ColumnMappings.Add("idIVAC", "idIVAC")
            tableMapping.ColumnMappings.Add("NIVAC", "NIVAC")
            tableMapping.ColumnMappings.Add("IVAC", "IVAC")
            tableMapping.ColumnMappings.Add("idIVAV", "idIVAV")
            tableMapping.ColumnMappings.Add("NIVAV", "NIVAV")
            tableMapping.ColumnMappings.Add("IVAV", "IVAV")
            tableMapping.ColumnMappings.Add("ColorCat", "ColorCat")
            tableMapping.ColumnMappings.Add("ColorFondo", "ColorFondo")
            tableMapping.ColumnMappings.Add("ColorFuente", "ColorFuente")
            tableMapping.ColumnMappings.Add("TFuente", "TFuente")
            tableMapping.ColumnMappings.Add("Capacidad", "Capacidad")
            tableMapping.ColumnMappings.Add("idUnidadCapacidad", "idUnidadCapacidad")
            tableMapping.ColumnMappings.Add("UnidadCapacidad", "UnidadCapacidad")
            tableMapping.ColumnMappings.Add("TipoReceta", "TipoReceta")
            tableMapping.ColumnMappings.Add("Empaquetado", "Empaquetado")
            tableMapping.ColumnMappings.Add("idProdEmpaquetado", "idProdEmpaquetado")
            tableMapping.ColumnMappings.Add("ProdEmpaquetado", "ProdEmpaquetado")
            tableMapping.ColumnMappings.Add("CantEmpaquetado", "CantEmpaquetado")
            tableMapping.ColumnMappings.Add("ImagenF", "ImagenF")
            tableMapping.ColumnMappings.Add("P1", "P1")
            tableMapping.ColumnMappings.Add("Observaciones", "Observaciones")
            tableMapping.ColumnMappings.Add("PrecioEmp", "PrecioEmp")
            tableMapping.ColumnMappings.Add("PrecioDEmp", "PrecioDEmp")
            tableMapping.ColumnMappings.Add("PrecioRemate", "PrecioRemate")
            tableMapping.ColumnMappings.Add("PrecioRemateD", "PrecioRemateD")
            tableMapping.ColumnMappings.Add("Remate", "Remate")
            tableMapping.ColumnMappings.Add("PrecioDM", "PrecioDM")
            tableMapping.ColumnMappings.Add("PrecioM", "PrecioM")
            tableMapping.ColumnMappings.Add("CategoriaInt", "CategoriaInt")
            tableMapping.ColumnMappings.Add("idUnidadCatInt", "idUnidadCatInt")
            tableMapping.ColumnMappings.Add("UnidadCatInt", "UnidadCatInt")
            tableMapping.ColumnMappings.Add("idCategoriaInt", "idCategoriaInt")
            tableMapping.ColumnMappings.Add("CalculoCap", "CalculoCap")
            tableMapping.ColumnMappings.Add("Mezcla", "Mezcla")
            tableMapping.ColumnMappings.Add("CantMinMayor", "CantMinMayor")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.MarSoft.My.MySettings.Default.BDMarSoft1ConnectionString
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT idProducto, Stock, Nombre, NombreCorto, FechaCreacion, idTipoProducto, Tip" & _
                "oProducto, idCategoria, Categoria, idSubCategoria, SubCategoria, idUnidad, Unida" & _
                "d, idUnidadAlt, UnidadAlt, idMarca, Marca, Modelo, Garantia, idProdNacional, Pro" & _
                "dNacional, FactorAlt, TipoFactorAlt, Decimal, Descripcion, Activo, Venta, Imagen" & _
                ", Costo, CostoD, Costo2, Costo2D, ExistenciaMin, ExistenciaMax, Precio1, Precio2" & _
                ", Precio3, Precio4, PrecioEfectivo, PrecioD1, PrecioD2, PrecioD3, PrecioD4, Prec" & _
                "ioEfectivoD, idIVAC, NIVAC, IVAC, idIVAV, NIVAV, IVAV, ColorCat, ColorFondo, Col" & _
                "orFuente, TFuente, Capacidad, idUnidadCapacidad, UnidadCapacidad, TipoReceta, Em" & _
                "paquetado, idProdEmpaquetado, ProdEmpaquetado, CantEmpaquetado, ImagenF, P1, Obs" & _
                "ervaciones, PrecioEmp, PrecioDEmp, PrecioRemate, PrecioRemateD, Remate, PrecioDM" & _
                ", PrecioM, CategoriaInt, idUnidadCatInt, UnidadCatInt, idCategoriaInt, CalculoCa" & _
                "p, Mezcla, CantMinMayor FROM dbo.VNewProducto"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DSNewListadoPrecios.VNewProductoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData() As DSNewListadoPrecios.VNewProductoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSNewListadoPrecios.VNewProductoDataTable = New DSNewListadoPrecios.VNewProductoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSNewListadoPrecios, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As DSNewListadoPrecios, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As DSNewListadoPrecios, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As DSNewListadoPrecios) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda" & _
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co" & _
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
